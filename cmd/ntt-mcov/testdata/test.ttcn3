module test {
	group Messages {

		type record MessageA {
			integer a,
			integer b,
			integer c
		}

		type record MessageB {
			integer a,
			integer b
		}

		type record MessageC {
			integer a,
			float f
		}

		type record A {
			boolean fa1,
			B       fa2
		}

		type record B {
			integer fb1,
			integer fb2
		}

	} with { encode "SimpleCodec" }

	// @url: https://github.com/nokia/ntt/pull/54#issue-564933162
	testcase Proposal() runs on MTC {
		setverdict(pass);

		p.send(valueof(MessageA:{1,3,2}));
		p.receive(MessageA:{1,?,2});

		p.send(valueof(MessageA:{1,5,5}));
		p.receive(MessageA:{1,?,?});

		p.send(valueof(MessageB:{23,5}));
		p.receive(MessageB:?);

		p.send(valueof(MessageC:{23,0.1}));
		p.receive(MessageC:{?,0.1});
	}

	// @url: https://github.com/nokia/ntt/pull/54#issuecomment-590053061
	testcase NestedMessages() runs on MTC {
		setverdict(pass);

		p.send(valueof(A:{true,{5,23}}));
		p.send(valueof(B:{5,23}));
		p.receive(A:{ fa1:=true, fa2:={ fb1:=5, fb2:=?  }})
		p.receive(B:{                   fb1:=?, fb2:=23 })
	}

	type component MTC { port Port p }
	type port Port message {
		inout MessageA, MessageB, MessageC;
		inout A, B;
	}

	control {
		execute(test.Proposal());
		execute(test.NestedMessages());
	}
} with {
	extension "NullConnector echo-on"
}

