/*****************************************************************
 ** @author   STF 487
 ** @version  0.0.1
 ** @purpose  1:22.3.6, decoding error in @decoded redirect value assignment
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// Failure of this decoding shall cause a test case error.

module NegSem_220306_catch_operation_009 {
	type record R {
        integer id,
        charstring payload
    }

    signature S() exception (R);

	type port P procedure {
		inout S;
	}

    type component GeneralComp {
		port P p;
	}

    function f_server() runs on GeneralComp {
        var integer v_src := 1953719668 with { encode "32bit" };
        var R v_rec := { id := 4, payload := encvalue_unichar(v_src) & "abcdefgij" };
        p.getcall(S:?);
        p.reply(S:{} value v_rec);
    }

    testcase TC_NegSem_220306_catch_operation_009() runs on GeneralComp system GeneralComp {
        var integer v_res with { encode "32bit" };
        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());
        p.call(S:{}) {
            [] p.catch(S, R:?) -> value (v_res := @decoded payload) {
                setverdict (pass);
            }
            [] p.catch { setverdict(pass); }
        }
    }

    control {
        execute(TC_NegSem_220306_catch_operation_009(), 5.0);
    }
}