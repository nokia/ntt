/*****************************************************************
 ** @author   STF T003
 ** @version  0.0.1
 ** @purpose  1:22.3.6, Verify that catch with @nodefault modifier works properly
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/
// The following requirements are tested:
// Restriction q)	The @nodefault modifier is allowed only in stand-alone catch statements.

module Sem_220306_catch_operation_018 {

    signature S() exception(integer);

	type port P procedure {
		inout S;
	}

	const integer c_portCount := 1;
    type component GeneralComp
	{
		port P p[c_portCount];
	}

	function f() runs on GeneralComp
	{
			p[0].getcall;    // get call
            p[0].raise(S, 1);    // and raise an exception
	}
	testcase TC_Sem_220306_catch_operation_018() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create;
		for(var integer i := 0; i < c_portCount; i := i + 1) {
			connect(self:p[i], v_ptc:p[i]);
			p[i].call(S:{}, nowait);
		}

		v_ptc.start(f());
		v_ptc.done;

        // catch the raised exception from v_ptc
        @nodefault p[0].catch;    // catch with @nodefault in a stand-alone statement
        setverdict(pass);
    }

    control {
        execute(TC_Sem_220306_catch_operation_018(), 5.0);
    }
}