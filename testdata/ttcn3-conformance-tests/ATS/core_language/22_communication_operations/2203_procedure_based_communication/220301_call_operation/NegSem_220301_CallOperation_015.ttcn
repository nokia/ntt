/*****************************************************************
 ** @author   STF 521
 ** @version  0.0.1
 ** @purpose  1:22.3.1, verify that exception signature mismatch in the response and exception handling causes an error
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// h) The selection of the alternatives to a call shall only be based on getreply and catch operations
// for the called procedure. Unqualified getreply and catch operations shall only treat replies from
// and exceptions raised by the called procedure.

module NegSem_220301_CallOperation_015 {

	signature S1() exception(integer);
	signature S2() exception(charstring);

	type port P procedure {
		inout S1, S2;
	}

    type component GeneralComp {
		port P p;
	}

	function f_called() runs on GeneralComp {
		p.getcall(S1:?);
		p.raise(S1, 1);
	}

    testcase TC_NegSem_220301_CallOperation_015() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create;
		connect(self:p, v_ptc:p);
		v_ptc.start(f_called());
		p.call(S1:{}) {
			[] p.catch(S1, integer:?) { setverdict(pass, "Exception caught!"); }
			[] p.catch(S2, charstring:?) {} // expected error
		}
    }

    control {
        execute(TC_NegSem_220301_CallOperation_015(), 5.0);
    }
}