/*****************************************************************
 ** @author   STF 487
 ** @version  0.0.1
 ** @purpose  1:22.3.2, @decoded redirect assignment of an octetstring field
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// When assigning individual fields of a call, encoded parameters can be decoded
// prior to assignment using the @decoded modifier. In this case, the referenced
// parameter on the right hand sided of the assignment shall be one of the
// bitstring, hexstring, octetstring, charstring or universal charstring types. It
// shall be decoded into a value of the same type as the variable on the left hand
// side of the assignment.

module Sem_220302_getcall_operation_016 {
	signature S(octetstring p_par);

	type port P procedure {
		inout S;
	}

    type component GeneralComp {
		port P p;
	}

    function f_server() runs on GeneralComp {
        var charstring v_res;
        alt {
            [] p.getcall(S:?) -> param (v_res := @decoded p_par) {
                if (v_res == "abc") { setverdict (pass); }
                else { setverdict(fail); }
            }
            [] p.getcall { setverdict(fail); }
        }
    }

    testcase TC_Sem_220302_getcall_operation_016() runs on GeneralComp system GeneralComp {
        var charstring v_src := "abc";
        var octetstring v_os := bit2oct(encvalue(v_src));
        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());
        p.call(S:{ p_par := v_os }, nowait);
        v_ptc.done;
        setverdict(pass);
    }

    control {
        execute(TC_Sem_220302_getcall_operation_016(), 5.0);
    }
}