/*****************************************************************
 ** @author   STF 487
 ** @version  0.0.1
 ** @purpose  1:22.3.2, value of wrong type in @decoded redirect assignment
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// Any other value shall cause an error.

module NegSem_220302_getcall_operation_014 {
	signature S(universal charstring p_par);

	type port P procedure {
		inout S;
	}

    type component GeneralComp {
		port P p;
	}

    function f_server() runs on GeneralComp {
        var integer v_res, v_enc := 32 with { encode "32bit" };
        alt {
            [] p.getcall(S:?) -> param (v_res := @decoded(v_enc) p_par) {
                setverdict (pass);
            }
            [] p.getcall { setverdict(pass); }
        }
    }

    testcase TC_NegSem_220302_getcall_operation_014() runs on GeneralComp system GeneralComp {
        var integer v_src := 1953719668 with { encode "32bit" };
        var universal charstring v_str := encvalue_unichar(v_src);
        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());
        p.call(S:{ p_par := v_str }, nowait);
        v_ptc.done;
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_220302_getcall_operation_014(), 5.0);
    }
}