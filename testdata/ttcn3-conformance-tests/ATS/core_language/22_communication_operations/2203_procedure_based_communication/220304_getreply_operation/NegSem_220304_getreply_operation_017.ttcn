/*****************************************************************
 ** @author   STF 487
 ** @version  0.0.1
 ** @purpose  1:22.3.4, invalid format value in @decoded redirect value assignment
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// Any other value shall cause an error.

module NegSem_220304_getreply_operation_017 {
	type record R {
        integer id,
        universal charstring payload
    }

    signature S() return R;

	type port P procedure {
		inout S;
	}

    type component GeneralComp {
		port P p;
	}

    function f_server() runs on GeneralComp {
        var integer v_src := 1953719668 with { encode "32bit" };
        var R v_rec := { id := 5, payload := encvalue_unichar(v_src) };
        p.getcall(S:?);
        p.reply(S:{} value v_rec);
    }

    testcase TC_NegSem_220304_getreply_operation_017() runs on GeneralComp system GeneralComp {
        var integer v_res with { encode "32bit" };
        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());
        p.call(S:{}) {
            [] p.getreply(S:?) -> value (v_res := @decoded("proprietary") payload) {
                setverdict(pass);
            }
            [] p.getreply { setverdict(pass); }
        }
        v_ptc.done;
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_220304_getreply_operation_017(), 5.0);
    }
}