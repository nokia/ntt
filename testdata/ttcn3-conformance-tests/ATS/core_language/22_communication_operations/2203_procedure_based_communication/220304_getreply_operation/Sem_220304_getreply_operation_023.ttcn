/*****************************************************************
 ** @author   STF 521
 ** @version  0.0.1
 ** @purpose  1:22.3.4, getreply with a from clause (any component)
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// A getreply operation may be restricted to a certain communication partner in case
// of one-to-many connections. This restriction shall be denoted by using the from
// keyword followed by a specification of an address or component reference, a list
// of address or component references or any component.

module Sem_220304_getreply_operation_023 {

	signature S() return integer;

	type port P procedure {
		inout S;
	}

    type component GeneralComp {
		port P p;
	}

	function f() runs on GeneralComp {
        p.getcall(S:{});
        p.reply(S:{} value 1);
	}

    const integer c_ptcCount := 3;

    testcase TC_Sem_220304_getreply_operation_023() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptcs[c_ptcCount];
        for (var integer i := 0; i < c_ptcCount; i := i + 1) {
            v_ptcs[i] := GeneralComp.create;
            connect(self:p, v_ptcs[i]:p);
            v_ptcs[i].start(f());
			p.call(S:{}, nowait) to v_ptcs[i];
        }

        for (var integer i := 0; i < c_ptcCount; i := i + 1) {
            alt {
                [] p.getreply(S:?) from any component { setverdict(pass); }
                [] p.getreply(S:?) { setverdict(fail); }
            }
        }
    }

    control {
        execute(TC_Sem_220304_getreply_operation_023(), 5.0);
    }
}