/*****************************************************************
 ** @author   STF 470
 ** @version  0.0.1
 ** @purpose  1:22.4, Verify behaviour of any port.check(catch) with assignment in case of unsuccessful match in standalone statement
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/
module Sem_2204_the_check_operation_088 {

	signature S() exception(integer);
	type port P procedure {
		inout S;
	}

    type component GeneralComp {
		port P p1, p2;
		var integer v_val;
		var GeneralComp v_src;
	}

	function f() runs on GeneralComp {
		p2.getcall;
		setverdict(pass, "Call received");
		p2.raise(S, integer:1);
	}

	altstep a() runs on GeneralComp {
		[] any port.catch {
			if (not isbound(v_val) and not isbound(v_src)) {
				setverdict(pass, "As expected, the check operation didn't match");
			}
			else { setverdict(fail, "The v_val and v_src variables should still be undefined at this point"); }
			stop;
		}
	}

	testcase TC_Sem_2204_the_check_operation_088() runs on GeneralComp system GeneralComp{
		var GeneralComp v_ptc := GeneralComp.create;
		activate(a());
		connect(self:p1, v_ptc:p1);
		connect(self:p2, v_ptc:p2);
		p2.call(S:{}, nowait);
		v_ptc.start(f());
        any port.check(catch(S, integer:(100..200)) -> value v_val sender v_src);
		setverdict(fail, "Incorrect match");
    }

    control {
        execute(TC_Sem_2204_the_check_operation_088(), 5.0);
    }
}