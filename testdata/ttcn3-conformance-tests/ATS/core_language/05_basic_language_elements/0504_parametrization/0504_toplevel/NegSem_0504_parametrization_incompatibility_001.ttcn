/***************************************************
 ** @author   STF 409
 ** @version  0.0.1
 ** @purpose  1:5.4, Ensure that the IUT correctly handles received testcase parametrization type incompatibility.
 ** @verdict  pass reject
 ***************************************************/
module NegSem_0504_parametrization_incompatibility_001 {

type enumerated MyEnumeratedType {e_black, e_white}
type integer address;

type record MyRecord {
 integer field1,
 boolean field2,
 address field3,
 MyEnumeratedType field4,
 integer field5
}


type component GeneralComp {

}


testcase TC_NegSem_0504_parametrization_incompatibility_001 (
  MyRecord ExpectedMatch,
  integer p_integer := 0,
  boolean p_boolean := true,
  address p_address := null,
  MyEnumeratedType p_enumerated := e_black,
  template integer p_integerTemplate := ?
 ) runs on GeneralComp {

 // MyRecord cannot be built from the default p_integerTemplate parameter
 var MyRecord ReceivedRecord := {p_integer, p_boolean, p_address, p_enumerated, p_integerTemplate};

    if ( ReceivedRecord == ExpectedMatch ) {
        setverdict(pass);
    }
    else {
        setverdict(fail);
    }

}


control{

 var MyRecord DefaultValues  := {
  field1 := 0,
  field2 := true,
  field3 := null,
  field4 := e_black,
  field5 := 1			//any number can be used here to correspond with ? matching
 }

    execute(TC_NegSem_0504_parametrization_incompatibility_001(DefaultValues));
}

}
