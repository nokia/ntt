/***************************************************
 ** @author   STF 572
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that the catch operation cannot be used during evaluation of a deterministic fuzzy parameter
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// Actual parameters passed to fuzzy or lazy formal parameters shall fulfill the restrictions imposed on content
// of functions used in special places given in 16.1.4.
// The following operations shall not be used:
// b) All port operations, i.e. start (port), stop (port), halt, clear, checkstate, send, receive, trigger, call,
// getcall, reply, getreply, raise, catch, check, connect, disconnect, map and unmap (see notes 1, 2, 3, 4 and 6).

module NegSem_050402_actual_parameters_209 {
    type port P message {
        inout integer;
    }

	signature S() exception (charstring);

	type port PSig procedure {
        inout S;
    }

    type component GeneralComp {
        port P p;
		port PSig psig;
	}

	function f_ptcBehaviour() runs on GeneralComp {
		psig.getcall(S:?);
		psig.raise(S, "UserException");
	}

	function f_test() runs on GeneralComp return template integer {
		psig.catch(S, charstring:?);
        return ?;
	}

    function f_param(template @fuzzy @deterministic integer p_param) runs on GeneralComp  {
        log(p_param); // causes validation
    }

    testcase TC_NegSem_050402_actual_parameters_209() runs on GeneralComp system GeneralComp {
		var GeneralComp v_ptc := GeneralComp.create;
        connect(mtc:p, mtc:p);
		connect(mtc:psig, v_ptc:psig);
		v_ptc.start(f_ptcBehaviour());
		psig.call(S:{}, nowait);
        f_param(f_test());
		setverdict(pass);
	}

	control {
		execute(TC_NegSem_050402_actual_parameters_209());
	}
}
