/***************************************************
 ** @author   STF 487
 ** @version  0.0.1
 ** @purpose  1:21.1.2, violation of strong typing rules for MTC ports in disconnect operations
 ** @verdict  pass reject
 ***************************************************/

// The following requirements are tested:
// If the type of the component referenced in a connection operation is known (either
// when the component reference is a variable or value returned from a function or the
// type is defined the runs on, mtc or system clause of the calling function), the
// referenced port declaration shall be present in this component type.

module NegSem_210102_disconnect_and_unmap_operations_009 {

	type port P message {
		inout integer;
	}

	type component GeneralComp {
		port P p;
	}

    type component GeneralCompEx extends GeneralComp {
        port P p2;
    }

    function f_disconnect() runs on GeneralCompEx mtc GeneralComp {
        disconnect(mtc:p2, self:p); // although the actual instance of MTC contains the p2 port,
          // it cannot be referenced as the mtc clause of the f_connect function contains
          // the GeneralComp type and not GeneralCompEx
    }

	testcase TC_NegSem_210102_disconnect_and_unmap_operations_009() runs on GeneralCompEx system GeneralComp {
        connect(mtc:p2, self:p);
		f_disconnect();
		setverdict(pass);
	}

	control{
	    execute(TC_NegSem_210102_disconnect_and_unmap_operations_009());
	}
}
