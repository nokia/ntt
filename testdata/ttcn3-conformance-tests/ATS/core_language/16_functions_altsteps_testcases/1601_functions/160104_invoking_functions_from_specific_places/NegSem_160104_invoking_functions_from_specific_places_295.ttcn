/***************************************************
 ** @author   STF 521
 ** @version  0.0.1
 ** @purpose  1:16.1.4, verify that the deactivate operation cannot be used in altstep local definitions
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// If value returning functions are called in receiving communication operations (in templates, template fields,
// in-line templates, or as actual parameters), in guards or events of alt statements or altsteps (see clause 20.2),
// or in initializations of altstep local definitions (see clause 16.2), the following operations shall not be
// used in functions called in the cases specified above, in order to avoid side effects that cause changing the
// state of the component or the actual snapshot and to prevent different results of subsequent evaluations
// on an unchanged snapshot:
// i) Activation and deactivation of defaults, i.e. the activate and deactivate statements (see notes 5 and 6).

module NegSem_160104_invoking_functions_from_specific_places_295 {
    type port P message {
        inout integer;
    }

    type component GeneralComp {
        port P p;
	}

	altstep a_anyTimer() runs on GeneralComp {
		[] any timer.timeout {}
	}

	function f_test() runs on GeneralComp return boolean {
		deactivate;
		return true;
	}

    altstep a_rcv() runs on GeneralComp {
        var boolean v_guard := f_test();
        [v_guard] p.receive(integer:?) {}
    }

    testcase TC_NegSem_160104_invoking_functions_from_specific_places_295() runs on GeneralComp system GeneralComp {
		activate(a_anyTimer());
        connect(mtc:p, mtc:p);
        p.send(1);
		a_rcv();
		setverdict(pass);
	}

	control {
		execute(TC_NegSem_160104_invoking_functions_from_specific_places_295());
	}
}
