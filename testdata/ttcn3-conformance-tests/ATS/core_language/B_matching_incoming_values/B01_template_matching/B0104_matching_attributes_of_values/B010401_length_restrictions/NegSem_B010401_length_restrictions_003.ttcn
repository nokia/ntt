/***************************************************
 ** @author   STF 409
 ** @version  0.0.1
 ** @purpose  1:B.1.4.1, Ensure that the IUT correctly handles template matching of value length definitions
 ** @verdict  pass reject
 ***************************************************/

module NegSem_B010401_length_restrictions_003 {


	type record MessageType {
  	 record of integer  	field1,
  	 record of integer 		field2,
  	 record of integer 		field3,
  	 record of integer   	field4,
  	 record of integer 		field5,
  	 record of integer 		field6
	}

    type port loopbackPort message {
	  inout MessageType
	}


type component GeneralComp {
	  port loopbackPort messagePort
}

testcase TC_NegSem_B010401_length_restrictions_003() runs on GeneralComp {

    var MessageType v_testMessage;

 template MessageType mw_matchingTemplate:=
 {
  field1 := { permutation ( 1, 2, 3 ), * } length (4),	// message length is too short
  field2 := { (1,2),* }  length (2 .. 5),
  field3 := { permutation ( 1, 2, 3 ), ? } length (4),
  field4 := { (1,2),? }  length (2 .. 5)
 }

 v_testMessage:=  {
  field1 := {2,1,3},
  field2 := {2,1,3,5},
  field3 := {2,1,3,5},
  field4 := {1,1}
 }

 messagePort.send(v_testMessage);

    alt {
     [] messagePort.receive(mw_matchingTemplate) {
        setverdict(fail);
     }
     [] messagePort.receive {
        setverdict(pass);
     }
    }
}

control{
    execute(TC_NegSem_B010401_length_restrictions_003());
}

}
