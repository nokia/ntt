/***************************************************
 ** @author   STF 521
 ** @version  0.0.1
 ** @purpose  1:B.1.4.1, Ensure that the IUT correctly handles template matching of value length definitions
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

module Sem_B010401_length_restrictions_004 {


	type record MessageType {
  	 charstring  	field1,
  	 bitstring		field2,
  	 hexstring		field3,
  	 charstring  	field4,
  	 bitstring		field5,
  	 hexstring		field6
	}

    type port loopbackPort message {
	  inout MessageType
	}


type component GeneralComp {
	  port loopbackPort messagePort
}

testcase TC_Sem_B010401_length_restrictions_004() runs on GeneralComp {

    var MessageType v_testMessage;

 template MessageType mw_matchingTemplate:=
 {
  field1 := pattern "test s*g" length (6 .. 15),
  field2 := '10*'B  length (3 .. 5),
  field3 := '89?AB'H  length (6),		//pattern is shorter than length restriction
  field4 := pattern "tes?" length (4 .. 13),
  field5 := '10?'B  length (3 .. 5),
  field6 := '89?ABC'H  length (6)
 }

 v_testMessage:=  {
  field1 := "test string",
  field2 := '10101'B,
  field3 := '89ABC'H,
  field4 := "test",
  field5 := '101'B,
  field6 := '899ABC'H
 }

 messagePort.send(v_testMessage);

    alt {
     [] messagePort.receive(mw_matchingTemplate) {
        setverdict(fail);
     }
     [] messagePort.receive {
        setverdict(pass);
     }
    }
}

control{
    execute(TC_Sem_B010401_length_restrictions_004());
}

}
