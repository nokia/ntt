/*****************************************************************
 ** @author   STF 470
 ** @version  0.0.1
 ** @purpose  1:15.8, Ensure that a template with omit restriction can't be assigned to a template(present)variable if omit
 ** @verdict  pass reject
 *****************************************************************/


module NegSem_1508_TemplateRestrictions_034 {

    type record ExampleType {	// Exampletype record contains a charstring and a boolean
       	charstring a ,
		boolean b optional
       }

	type component GeneralComp {
	var template (present) ExampleType v_present;	//value restricted template variable
	}


	template (omit) ExampleType MyintTemplate := omit;	//actual template (omit) is omit




	testcase TC_NegSem_1508_TemplateRestrictions_034() runs on GeneralComp {

	v_present := MyintTemplate;	//error: v_present is present restricted, hence can not be omit

		if (valueof(v_present.b) == false) {
      		setverdict(pass);
		} else {
            setverdict(fail);
       }
 }

    control{
        execute(TC_NegSem_1508_TemplateRestrictions_034());
    }
}