/*****************************************************************
 ** @author   STF 470
 ** @version  0.0.1
 ** @purpose  1:8.2.3.1, Verify that function is imported together with parameter names
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// Restriction c:
// A definition is imported together with its name and all local definitions.
// Restriction d:
// A definition is imported together with all information of referenced definitions that
// are necessary for the usage of the imported definition, independent of the visibility
// of the referenced definitions.
// Table 8:
// Function

module Sem_08020301_GeneralFormatOfImport_012 {

import from Sem_08020301_GeneralFormatOfImport_012_import { function f_div };

type component GeneralComp {}

testcase TC_Sem_08020301_GeneralFormatOfImport_012() runs on GeneralComp {

	// testing if function parameter names were imported
	// type compatibility is checked during parameter passing and return value assignment: for
	// this check, the type information for the function parameters and return values should be
	// available at this point to compile the script correctly
	var integer v_res := f_div(p_param1 := 10, p_param2 := 5);
	if (v_res == 2)
		{ setverdict(pass); }
	else
		{ setverdict(fail); }
}

control{
    execute(TC_Sem_08020301_GeneralFormatOfImport_012());
}
}

module Sem_08020301_GeneralFormatOfImport_012_import {
	function f_div(integer p_param1, integer p_param2) return integer {
		return p_param1 / p_param2;
	}
}